{"ast":null,"code":"import _objectSpread from\"C:/Users/daniel.adm/Documents/PROJETO CONTROLE PAPEL/hmaa-papel/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Grid,Card,CardContent,CardHeader,Typography,Box,CircularProgress,Alert,List,ListItem,ListItemText,Divider}from'@mui/material';import{Layers,Assessment,History}from'@mui/icons-material';import axios from'axios';import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,ResponsiveContainer,LabelList}from'recharts';// --- COMPONENTES DE CARD (sem alterações) ---\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StatCard=_ref=>{let{title,value,unit,IconComponent,color,loading,error}=_ref;return/*#__PURE__*/_jsx(Card,{elevation:4,sx:{display:'flex',flexDirection:'column',height:'100%',borderRadius:'12px'},children:/*#__PURE__*/_jsxs(CardContent,{sx:{flexGrow:1,display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(Box,{sx:{bgcolor:color,borderRadius:'50%',p:2,mr:2,display:'flex'},children:/*#__PURE__*/_jsx(IconComponent,{sx:{color:'#fff',fontSize:'2rem'}})}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"text.secondary\",children:title}),loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):error?/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"error\",children:error}):/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",component:\"p\",sx:{fontWeight:'bold'},children:[value,\" \",/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"span\",color:\"text.secondary\",children:unit})]})]})]})});};const ConsumoPorSetorChart=()=>{const[data,setData]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{axios.get('/api/relatorios/total-por-setor').then(response=>setData(response.data.slice(0,5).map(item=>_objectSpread(_objectSpread({},item),{},{total_resmas:Number(item.total_resmas)||0})))).catch(error=>console.error(\"Erro no gráfico:\",error)).finally(()=>setLoading(false));},[]);return/*#__PURE__*/_jsxs(Card,{elevation:4,sx:{height:'100%',borderRadius:'12px',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(CardHeader,{title:\"Top 5 Consumo por Setor (M\\xEAs)\",titleTypographyProps:{fontWeight:'bold'},avatar:/*#__PURE__*/_jsx(Box,{sx:{bgcolor:'#f57c00',borderRadius:'50%',p:1,display:'flex'},children:/*#__PURE__*/_jsx(Assessment,{sx:{color:'#fff'}})})}),/*#__PURE__*/_jsx(CardContent,{sx:{flexGrow:1},children:loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',height:'100%'},children:/*#__PURE__*/_jsx(CircularProgress,{color:\"warning\"})}):/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(BarChart,{data:data,layout:\"vertical\",margin:{top:5,right:40,left:20,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{type:\"number\",hide:true}),/*#__PURE__*/_jsx(YAxis,{type:\"category\",dataKey:\"nome\",width:150,tick:{fontSize:12,fill:'#555'},interval:0,axisLine:false,tickLine:false}),/*#__PURE__*/_jsx(Tooltip,{cursor:{fill:'#f5f5f5'},formatter:value=>[\"\".concat(value,\" resmas\"),'Total']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"total_resmas\",fill:\"#ff9800\",barSize:25,radius:[0,8,8,0],children:/*#__PURE__*/_jsx(LabelList,{dataKey:\"total_resmas\",position:\"right\",style:{fill:'black',fontSize:'14px',fontWeight:'bold'}})})]})})})]});};const UltimosLancamentosCard=()=>{const[data,setData]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{axios.get('/api/relatorios/ultimos-lancamentos').then(response=>setData(response.data)).catch(error=>console.error(\"Erro nos últimos lançamentos:\",error)).finally(()=>setLoading(false));},[]);return/*#__PURE__*/_jsxs(Card,{elevation:4,sx:{height:'100%',borderRadius:'12px'},children:[/*#__PURE__*/_jsx(CardHeader,{title:\"\\xDAltimos 5 Lan\\xE7amentos\",titleTypographyProps:{fontWeight:'bold'},avatar:/*#__PURE__*/_jsx(Box,{sx:{bgcolor:'#43a047',borderRadius:'50%',p:1,display:'flex'},children:/*#__PURE__*/_jsx(History,{sx:{color:'#fff'}})})}),/*#__PURE__*/_jsx(CardContent,{children:loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',height:200},children:/*#__PURE__*/_jsx(CircularProgress,{color:\"success\"})}):/*#__PURE__*/_jsx(List,{dense:true,children:data.length>0?data.map((item,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:item.setor_nome,secondary:\"Em: \".concat(item.data_formatada)})}),index<data.length-1&&/*#__PURE__*/_jsx(Divider,{})]},item.id)):/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"Nenhum lan\\xE7amento recente.\"})})})]});};// --- COMPONENTE PRINCIPAL DO DASHBOARD ---\nfunction Dashboard(){const[totalGeralData,setTotalGeralData]=useState({totalResmasMes:0});const[loadingTotalGeral,setLoadingTotalGeral]=useState(true);const[errorTotalGeral,setErrorTotalGeral]=useState(null);useEffect(()=>{axios.get('/api/relatorios/dashboard').then(response=>setTotalGeralData(response.data)).catch(err=>{var _err$response,_err$response$data;return setErrorTotalGeral(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||\"Falha ao carregar.\");}).finally(()=>setLoadingTotalGeral(false));},[]);return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,sx:{fontWeight:'bold',mb:4},children:\"Dashboard de Controle\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:4,alignItems:\"stretch\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,lg:4,children:/*#__PURE__*/_jsx(StatCard,{title:\"Total Geral no M\\xEAs\",value:totalGeralData.totalResmasMes,unit:\"resmas\",IconComponent:Layers,color:\"#3f51b5\",loading:loadingTotalGeral,error:errorTotalGeral})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,lg:4,children:/*#__PURE__*/_jsx(ConsumoPorSetorChart,{})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:12,lg:4,children:[\" \",/*#__PURE__*/_jsx(UltimosLancamentosCard,{})]})]})]});}export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","Grid","Card","CardContent","CardHeader","Typography","Box","CircularProgress","Alert","List","ListItem","ListItemText","Divider","Layers","Assessment","History","axios","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","LabelList","jsx","_jsx","jsxs","_jsxs","StatCard","_ref","title","value","unit","IconComponent","color","loading","error","elevation","sx","display","flexDirection","height","borderRadius","children","flexGrow","alignItems","bgcolor","p","mr","fontSize","variant","size","component","fontWeight","ConsumoPorSetorChart","data","setData","setLoading","get","then","response","slice","map","item","_objectSpread","total_resmas","Number","catch","console","finally","titleTypographyProps","avatar","justifyContent","width","layout","margin","top","right","left","bottom","strokeDasharray","type","hide","dataKey","tick","fill","interval","axisLine","tickLine","cursor","formatter","concat","barSize","radius","position","style","UltimosLancamentosCard","dense","length","index","Fragment","primary","setor_nome","secondary","data_formatada","id","Dashboard","totalGeralData","setTotalGeralData","totalResmasMes","loadingTotalGeral","setLoadingTotalGeral","errorTotalGeral","setErrorTotalGeral","err","_err$response","_err$response$data","message","gutterBottom","mb","container","spacing","xs","md","lg"],"sources":["C:/Users/daniel.adm/Documents/PROJETO CONTROLE PAPEL/hmaa-papel/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Grid, Card, CardContent, CardHeader, Typography, Box, \r\n  CircularProgress, Alert, List, ListItem, ListItemText, Divider \r\n} from '@mui/material';\r\nimport { Layers, Assessment, History } from '@mui/icons-material';\r\nimport axios from 'axios';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LabelList } from 'recharts';\r\n\r\n// --- COMPONENTES DE CARD (sem alterações) ---\r\n\r\nconst StatCard = ({ title, value, unit, IconComponent, color, loading, error }) => (\r\n    <Card elevation={4} sx={{ display: 'flex', flexDirection: 'column', height: '100%', borderRadius: '12px' }}>\r\n      <CardContent sx={{ flexGrow: 1, display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ bgcolor: color, borderRadius: '50%', p: 2, mr: 2, display: 'flex' }}><IconComponent sx={{ color: '#fff', fontSize: '2rem' }} /></Box>\r\n        <Box><Typography variant=\"h6\" color=\"text.secondary\">{title}</Typography>\r\n          {loading ? <CircularProgress size={24} /> : error ? <Typography variant=\"body1\" color=\"error\">{error}</Typography> : <Typography variant=\"h4\" component=\"p\" sx={{ fontWeight: 'bold' }}>{value} <Typography variant=\"h6\" component=\"span\" color=\"text.secondary\">{unit}</Typography></Typography>}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n);\r\n\r\nconst ConsumoPorSetorChart = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    axios.get('/api/relatorios/total-por-setor').then(response => setData(response.data.slice(0, 5).map(item => ({...item, total_resmas: Number(item.total_resmas) || 0})))).catch(error => console.error(\"Erro no gráfico:\", error)).finally(() => setLoading(false));\r\n  }, []);\r\n  return (\r\n    <Card elevation={4} sx={{ height: '100%', borderRadius: '12px', display: 'flex', flexDirection: 'column' }}>\r\n      <CardHeader title=\"Top 5 Consumo por Setor (Mês)\" titleTypographyProps={{ fontWeight: 'bold' }} avatar={<Box sx={{ bgcolor: '#f57c00', borderRadius: '50%', p: 1, display: 'flex' }}><Assessment sx={{ color: '#fff' }} /></Box>} />\r\n      <CardContent sx={{ flexGrow: 1 }}>\r\n        {loading ? <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}><CircularProgress color=\"warning\" /></Box> :\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart data={data} layout=\"vertical\" margin={{ top: 5, right: 40, left: 20, bottom: 5 }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis type=\"number\" hide />\r\n              <YAxis type=\"category\" dataKey=\"nome\" width={150} tick={{ fontSize: 12, fill: '#555' }} interval={0} axisLine={false} tickLine={false}/>\r\n              <Tooltip cursor={{fill: '#f5f5f5'}} formatter={(value) => [`${value} resmas`, 'Total']} />\r\n              <Bar dataKey=\"total_resmas\" fill=\"#ff9800\" barSize={25} radius={[0, 8, 8, 0]}>\r\n                <LabelList dataKey=\"total_resmas\" position=\"right\" style={{ fill: 'black', fontSize: '14px', fontWeight: 'bold' }} />\r\n              </Bar>\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst UltimosLancamentosCard = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    axios.get('/api/relatorios/ultimos-lancamentos').then(response => setData(response.data)).catch(error => console.error(\"Erro nos últimos lançamentos:\", error)).finally(() => setLoading(false));\r\n  }, []);\r\n  return (\r\n    <Card elevation={4} sx={{ height: '100%', borderRadius: '12px' }}>\r\n      <CardHeader title=\"Últimos 5 Lançamentos\" titleTypographyProps={{ fontWeight: 'bold' }} avatar={<Box sx={{ bgcolor: '#43a047', borderRadius: '50%', p: 1, display: 'flex' }}><History sx={{ color: '#fff' }} /></Box>} />\r\n      <CardContent>\r\n        {loading ? <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 200 }}><CircularProgress color=\"success\" /></Box> :\r\n          <List dense>\r\n            {data.length > 0 ? data.map((item, index) => (\r\n              <React.Fragment key={item.id}><ListItem><ListItemText primary={item.setor_nome} secondary={`Em: ${item.data_formatada}`} /></ListItem>{index < data.length - 1 && <Divider />}</React.Fragment>\r\n            )) : <Typography color=\"text.secondary\">Nenhum lançamento recente.</Typography>}\r\n          </List>\r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\n// --- COMPONENTE PRINCIPAL DO DASHBOARD ---\r\nfunction Dashboard() {\r\n  const [totalGeralData, setTotalGeralData] = useState({ totalResmasMes: 0 });\r\n  const [loadingTotalGeral, setLoadingTotalGeral] = useState(true);\r\n  const [errorTotalGeral, setErrorTotalGeral] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/relatorios/dashboard').then(response => setTotalGeralData(response.data)).catch(err => setErrorTotalGeral(err.response?.data?.message || \"Falha ao carregar.\")).finally(() => setLoadingTotalGeral(false));\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold', mb: 4 }}>\r\n        Dashboard de Controle\r\n      </Typography>\r\n      \r\n      {/* Grid horizontal com 3 colunas em telas grandes */}\r\n      <Grid container spacing={4} alignItems=\"stretch\">\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          <StatCard\r\n            title=\"Total Geral no Mês\"\r\n            value={totalGeralData.totalResmasMes}\r\n            unit=\"resmas\"\r\n            IconComponent={Layers}\r\n            color=\"#3f51b5\"\r\n            loading={loadingTotalGeral}\r\n            error={errorTotalGeral}\r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} md={6} lg={4}>\r\n          <ConsumoPorSetorChart />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} md={12} lg={4}> {/* Ocupa a linha toda em telas médias, mas 1/3 em telas grandes */}\r\n          <UltimosLancamentosCard />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}