{"ast":null,"code":"import _objectSpread from\"C:/Users/daniel.adm/Documents/PROJETO CONTROLE PAPEL/hmaa-papel/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Box,Typography,Grid,Card,CardContent,CardActions,Button,CircularProgress,TextField,MenuItem}from'@mui/material';import{Download as DownloadIcon}from'@mui/icons-material';import axios from'axios';import{saveAs}from'file-saver';// ... (o componente ReportCard continua o mesmo)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Relatorios(){const[loadingReport,setLoadingReport]=useState(null);const[filters,setFilters]=useState({data_inicio:'',data_fim:'',setor_id:''// Novo estado para o filtro de setor\n});const[setores,setSetores]=useState([]);// Para popular o dropdown\n// Carrega a lista de setores\nuseEffect(()=>{const fetchSetores=async()=>{try{const response=await axios.get('/api/setores');setSetores(response.data);}catch(err){console.error(\"Erro ao buscar setores para o filtro:\",err);}};fetchSetores();},[]);const handleFilterChange=e=>{setFilters(_objectSpread(_objectSpread({},filters),{},{[e.target.name]:e.target.value}));};const handleGenerateReport=async reportType=>{if(!filters.data_inicio||!filters.data_fim){alert('Por favor, selecione a data de início e a data de fim.');return;}setLoadingReport(reportType);let url='';let defaultFilename='relatorio.pdf';let params={data_inicio:filters.data_inicio,data_fim:filters.data_fim};switch(reportType){case'totalPorSetor':url='/api/relatorios/por-setor/pdf';defaultFilename=\"Relatorio_Setor_\".concat(filters.data_inicio,\"_a_\").concat(filters.data_fim,\".pdf\");// Adiciona o setor_id aos parâmetros SOMENTE se ele for selecionado\nif(filters.setor_id){params.setor_id=filters.setor_id;}break;case'gastoTotal':url='/api/relatorios/gasto-total/pdf';defaultFilename=\"Gasto_Total_\".concat(filters.data_inicio,\"_a_\").concat(filters.data_fim,\".pdf\");break;default:setLoadingReport(null);return;}try{const response=await axios.get(url,{params,responseType:'blob'});saveAs(new Blob([response.data]),defaultFilename);}catch(error){console.error(\"Erro ao gerar o relat\\xF3rio \".concat(reportType,\":\"),error);alert('Não foi possível gerar o relatório. Verifique se existem dados para os filtros selecionados.');}finally{setLoadingReport(null);}};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,sx:{fontWeight:'bold'},children:\"Central de Relat\\xF3rios\"}),/*#__PURE__*/_jsxs(Card,{sx:{mb:4,p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Selecione os Filtros\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"date\",label:\"Data In\\xEDcio\",name:\"data_inicio\",value:filters.data_inicio,onChange:handleFilterChange,InputLabelProps:{shrink:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"date\",label:\"Data Fim\",name:\"data_fim\",value:filters.data_fim,onChange:handleFilterChange,InputLabelProps:{shrink:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsxs(TextField,{select:true,fullWidth:true,label:\"Setor (Opcional)\",name:\"setor_id\",value:filters.setor_id,onChange:handleFilterChange,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:/*#__PURE__*/_jsx(\"em\",{children:\"Todos os Setores\"})}),setores.map(setor=>/*#__PURE__*/_jsx(MenuItem,{value:setor.id,children:setor.nome},setor.id))]})})]})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(ReportCard,{title:\"Total por Setor\",description:\"Gera um relat\\xF3rio PDF com o total de resmas por setor. Se nenhum setor for selecionado, mostra todos.\",onGenerate:()=>handleGenerateReport('totalPorSetor'),loading:loadingReport==='totalPorSetor'})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(ReportCard,{title:\"Gasto Total do Hospital\",description:\"Exibe um resumo do consumo total de resmas do hospital no per\\xEDodo selecionado.\",onGenerate:()=>handleGenerateReport('gastoTotal'),loading:loadingReport==='gastoTotal'})})]})]});}export default Relatorios;","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Grid","Card","CardContent","CardActions","Button","CircularProgress","TextField","MenuItem","Download","DownloadIcon","axios","saveAs","jsx","_jsx","jsxs","_jsxs","Relatorios","loadingReport","setLoadingReport","filters","setFilters","data_inicio","data_fim","setor_id","setores","setSetores","fetchSetores","response","get","data","err","console","error","handleFilterChange","e","_objectSpread","target","name","value","handleGenerateReport","reportType","alert","url","defaultFilename","params","concat","responseType","Blob","children","variant","gutterBottom","sx","fontWeight","mb","p","container","spacing","item","xs","sm","fullWidth","type","label","onChange","InputLabelProps","shrink","select","map","setor","id","nome","md","ReportCard","title","description","onGenerate","loading"],"sources":["C:/Users/daniel.adm/Documents/PROJETO CONTROLE PAPEL/hmaa-papel/frontend/src/pages/Relatorios.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Grid, Card, CardContent, CardActions, Button, CircularProgress, TextField, MenuItem } from '@mui/material';\r\nimport { Download as DownloadIcon } from '@mui/icons-material';\r\nimport axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\n\r\n// ... (o componente ReportCard continua o mesmo)\r\n\r\nfunction Relatorios() {\r\n  const [loadingReport, setLoadingReport] = useState(null);\r\n  const [filters, setFilters] = useState({\r\n    data_inicio: '',\r\n    data_fim: '',\r\n    setor_id: '', // Novo estado para o filtro de setor\r\n  });\r\n  const [setores, setSetores] = useState([]); // Para popular o dropdown\r\n\r\n  // Carrega a lista de setores\r\n  useEffect(() => {\r\n    const fetchSetores = async () => {\r\n      try {\r\n        const response = await axios.get('/api/setores');\r\n        setSetores(response.data);\r\n      } catch (err) {\r\n        console.error(\"Erro ao buscar setores para o filtro:\", err);\r\n      }\r\n    };\r\n    fetchSetores();\r\n  }, []);\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilters({ ...filters, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleGenerateReport = async (reportType) => {\r\n    if (!filters.data_inicio || !filters.data_fim) {\r\n      alert('Por favor, selecione a data de início e a data de fim.');\r\n      return;\r\n    }\r\n    setLoadingReport(reportType);\r\n    \r\n    let url = '';\r\n    let defaultFilename = 'relatorio.pdf';\r\n    let params = {\r\n      data_inicio: filters.data_inicio,\r\n      data_fim: filters.data_fim,\r\n    };\r\n\r\n    switch(reportType) {\r\n      case 'totalPorSetor':\r\n        url = '/api/relatorios/por-setor/pdf';\r\n        defaultFilename = `Relatorio_Setor_${filters.data_inicio}_a_${filters.data_fim}.pdf`;\r\n        // Adiciona o setor_id aos parâmetros SOMENTE se ele for selecionado\r\n        if (filters.setor_id) {\r\n          params.setor_id = filters.setor_id;\r\n        }\r\n        break;\r\n      case 'gastoTotal':\r\n        url = '/api/relatorios/gasto-total/pdf';\r\n        defaultFilename = `Gasto_Total_${filters.data_inicio}_a_${filters.data_fim}.pdf`;\r\n        break;\r\n      default:\r\n        setLoadingReport(null);\r\n        return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(url, { params, responseType: 'blob' });\r\n      saveAs(new Blob([response.data]), defaultFilename);\r\n    } catch (error) {\r\n      console.error(`Erro ao gerar o relatório ${reportType}:`, error);\r\n      alert('Não foi possível gerar o relatório. Verifique se existem dados para os filtros selecionados.');\r\n    } finally {\r\n      setLoadingReport(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold' }}>\r\n        Central de Relatórios\r\n      </Typography>\r\n\r\n      {/* Card de Filtros */}\r\n      <Card sx={{ mb: 4, p: 2 }}>\r\n        <Typography variant=\"h6\" gutterBottom>Selecione os Filtros</Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField fullWidth type=\"date\" label=\"Data Início\" name=\"data_inicio\" value={filters.data_inicio} onChange={handleFilterChange} InputLabelProps={{ shrink: true }} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField fullWidth type=\"date\" label=\"Data Fim\" name=\"data_fim\" value={filters.data_fim} onChange={handleFilterChange} InputLabelProps={{ shrink: true }} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField select fullWidth label=\"Setor (Opcional)\" name=\"setor_id\" value={filters.setor_id} onChange={handleFilterChange}>\r\n              <MenuItem value=\"\"><em>Todos os Setores</em></MenuItem>\r\n              {setores.map(setor => <MenuItem key={setor.id} value={setor.id}>{setor.nome}</MenuItem>)}\r\n            </TextField>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n\r\n      <Grid container spacing={3}>\r\n        {/* Card: Total por Setor */}\r\n        <Grid item xs={12} md={6}>\r\n          <ReportCard\r\n            title=\"Total por Setor\"\r\n            description=\"Gera um relatório PDF com o total de resmas por setor. Se nenhum setor for selecionado, mostra todos.\"\r\n            onGenerate={() => handleGenerateReport('totalPorSetor')}\r\n            loading={loadingReport === 'totalPorSetor'}\r\n          />\r\n        </Grid>\r\n\r\n        {/* Card: Gasto Total do Hospital */}\r\n        <Grid item xs={12} md={6}>\r\n          <ReportCard\r\n            title=\"Gasto Total do Hospital\"\r\n            description=\"Exibe um resumo do consumo total de resmas do hospital no período selecionado.\"\r\n            onGenerate={() => handleGenerateReport('gastoTotal')}\r\n            loading={loadingReport === 'gastoTotal'}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Relatorios;"],"mappings":"6JAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,GAAG,CAAEC,UAAU,CAAEC,IAAI,CAAEC,IAAI,CAAEC,WAAW,CAAEC,WAAW,CAAEC,MAAM,CAAEC,gBAAgB,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,eAAe,CACpI,OAASC,QAAQ,GAAI,CAAAC,YAAY,KAAQ,qBAAqB,CAC9D,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,YAAY,CAEnC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,UAAUA,CAAA,CAAG,CACpB,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGtB,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAACuB,OAAO,CAAEC,UAAU,CAAC,CAAGxB,QAAQ,CAAC,CACrCyB,WAAW,CAAE,EAAE,CACfC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAI;AAChB,CAAC,CAAC,CACF,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAG7B,QAAQ,CAAC,EAAE,CAAC,CAAE;AAE5C;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAA6B,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAjB,KAAK,CAACkB,GAAG,CAAC,cAAc,CAAC,CAChDH,UAAU,CAACE,QAAQ,CAACE,IAAI,CAAC,CAC3B,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,uCAAuC,CAAEF,GAAG,CAAC,CAC7D,CACF,CAAC,CACDJ,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAO,kBAAkB,CAAIC,CAAC,EAAK,CAChCd,UAAU,CAAAe,aAAA,CAAAA,aAAA,IAAMhB,OAAO,MAAE,CAACe,CAAC,CAACE,MAAM,CAACC,IAAI,EAAGH,CAAC,CAACE,MAAM,CAACE,KAAK,EAAE,CAAC,CAC7D,CAAC,CAED,KAAM,CAAAC,oBAAoB,CAAG,KAAO,CAAAC,UAAU,EAAK,CACjD,GAAI,CAACrB,OAAO,CAACE,WAAW,EAAI,CAACF,OAAO,CAACG,QAAQ,CAAE,CAC7CmB,KAAK,CAAC,wDAAwD,CAAC,CAC/D,OACF,CACAvB,gBAAgB,CAACsB,UAAU,CAAC,CAE5B,GAAI,CAAAE,GAAG,CAAG,EAAE,CACZ,GAAI,CAAAC,eAAe,CAAG,eAAe,CACrC,GAAI,CAAAC,MAAM,CAAG,CACXvB,WAAW,CAAEF,OAAO,CAACE,WAAW,CAChCC,QAAQ,CAAEH,OAAO,CAACG,QACpB,CAAC,CAED,OAAOkB,UAAU,EACf,IAAK,eAAe,CAClBE,GAAG,CAAG,+BAA+B,CACrCC,eAAe,oBAAAE,MAAA,CAAsB1B,OAAO,CAACE,WAAW,QAAAwB,MAAA,CAAM1B,OAAO,CAACG,QAAQ,QAAM,CACpF;AACA,GAAIH,OAAO,CAACI,QAAQ,CAAE,CACpBqB,MAAM,CAACrB,QAAQ,CAAGJ,OAAO,CAACI,QAAQ,CACpC,CACA,MACF,IAAK,YAAY,CACfmB,GAAG,CAAG,iCAAiC,CACvCC,eAAe,gBAAAE,MAAA,CAAkB1B,OAAO,CAACE,WAAW,QAAAwB,MAAA,CAAM1B,OAAO,CAACG,QAAQ,QAAM,CAChF,MACF,QACEJ,gBAAgB,CAAC,IAAI,CAAC,CACtB,OACJ,CAEA,GAAI,CACF,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAjB,KAAK,CAACkB,GAAG,CAACc,GAAG,CAAE,CAAEE,MAAM,CAAEE,YAAY,CAAE,MAAO,CAAC,CAAC,CACvEnC,MAAM,CAAC,GAAI,CAAAoC,IAAI,CAAC,CAACpB,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAEc,eAAe,CAAC,CACpD,CAAE,MAAOX,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,iCAAAa,MAAA,CAA8BL,UAAU,MAAKR,KAAK,CAAC,CAChES,KAAK,CAAC,8FAA8F,CAAC,CACvG,CAAC,OAAS,CACRvB,gBAAgB,CAAC,IAAI,CAAC,CACxB,CACF,CAAC,CAED,mBACEH,KAAA,CAACjB,GAAG,EAAAkD,QAAA,eACFnC,IAAA,CAACd,UAAU,EAACkD,OAAO,CAAC,IAAI,CAACC,YAAY,MAACC,EAAE,CAAE,CAAEC,UAAU,CAAE,MAAO,CAAE,CAAAJ,QAAA,CAAC,0BAElE,CAAY,CAAC,cAGbjC,KAAA,CAACd,IAAI,EAACkD,EAAE,CAAE,CAAEE,EAAE,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAE,CAAAN,QAAA,eACxBnC,IAAA,CAACd,UAAU,EAACkD,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAF,QAAA,CAAC,sBAAoB,CAAY,CAAC,cACvEjC,KAAA,CAACf,IAAI,EAACuD,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAR,QAAA,eACzBnC,IAAA,CAACb,IAAI,EAACyD,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAX,QAAA,cACvBnC,IAAA,CAACP,SAAS,EAACsD,SAAS,MAACC,IAAI,CAAC,MAAM,CAACC,KAAK,CAAC,gBAAa,CAACzB,IAAI,CAAC,aAAa,CAACC,KAAK,CAAEnB,OAAO,CAACE,WAAY,CAAC0C,QAAQ,CAAE9B,kBAAmB,CAAC+B,eAAe,CAAE,CAAEC,MAAM,CAAE,IAAK,CAAE,CAAE,CAAC,CACnK,CAAC,cACPpD,IAAA,CAACb,IAAI,EAACyD,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAX,QAAA,cACvBnC,IAAA,CAACP,SAAS,EAACsD,SAAS,MAACC,IAAI,CAAC,MAAM,CAACC,KAAK,CAAC,UAAU,CAACzB,IAAI,CAAC,UAAU,CAACC,KAAK,CAAEnB,OAAO,CAACG,QAAS,CAACyC,QAAQ,CAAE9B,kBAAmB,CAAC+B,eAAe,CAAE,CAAEC,MAAM,CAAE,IAAK,CAAE,CAAE,CAAC,CAC1J,CAAC,cACPpD,IAAA,CAACb,IAAI,EAACyD,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAX,QAAA,cACvBjC,KAAA,CAACT,SAAS,EAAC4D,MAAM,MAACN,SAAS,MAACE,KAAK,CAAC,kBAAkB,CAACzB,IAAI,CAAC,UAAU,CAACC,KAAK,CAAEnB,OAAO,CAACI,QAAS,CAACwC,QAAQ,CAAE9B,kBAAmB,CAAAe,QAAA,eACzHnC,IAAA,CAACN,QAAQ,EAAC+B,KAAK,CAAC,EAAE,CAAAU,QAAA,cAACnC,IAAA,OAAAmC,QAAA,CAAI,kBAAgB,CAAI,CAAC,CAAU,CAAC,CACtDxB,OAAO,CAAC2C,GAAG,CAACC,KAAK,eAAIvD,IAAA,CAACN,QAAQ,EAAgB+B,KAAK,CAAE8B,KAAK,CAACC,EAAG,CAAArB,QAAA,CAAEoB,KAAK,CAACE,IAAI,EAAtCF,KAAK,CAACC,EAA2C,CAAC,CAAC,EAC/E,CAAC,CACR,CAAC,EACH,CAAC,EACH,CAAC,cAEPtD,KAAA,CAACf,IAAI,EAACuD,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAR,QAAA,eAEzBnC,IAAA,CAACb,IAAI,EAACyD,IAAI,MAACC,EAAE,CAAE,EAAG,CAACa,EAAE,CAAE,CAAE,CAAAvB,QAAA,cACvBnC,IAAA,CAAC2D,UAAU,EACTC,KAAK,CAAC,iBAAiB,CACvBC,WAAW,CAAC,0GAAuG,CACnHC,UAAU,CAAEA,CAAA,GAAMpC,oBAAoB,CAAC,eAAe,CAAE,CACxDqC,OAAO,CAAE3D,aAAa,GAAK,eAAgB,CAC5C,CAAC,CACE,CAAC,cAGPJ,IAAA,CAACb,IAAI,EAACyD,IAAI,MAACC,EAAE,CAAE,EAAG,CAACa,EAAE,CAAE,CAAE,CAAAvB,QAAA,cACvBnC,IAAA,CAAC2D,UAAU,EACTC,KAAK,CAAC,yBAAyB,CAC/BC,WAAW,CAAC,mFAAgF,CAC5FC,UAAU,CAAEA,CAAA,GAAMpC,oBAAoB,CAAC,YAAY,CAAE,CACrDqC,OAAO,CAAE3D,aAAa,GAAK,YAAa,CACzC,CAAC,CACE,CAAC,EACH,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAAD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}